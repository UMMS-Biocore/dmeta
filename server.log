HTTPS server running on port 4000...
DB Connections Successful
exp_series { name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466109 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466109 } }
exp { exp_series_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'exp_series',
     required: true },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: false,
     active: true,
     ref: 'protocol' },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466119 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466119 } }
biosamp { exp_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'exp',
     required: true },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466122 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466122 } }
file { biosamp_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'biosamp',
     required: true },
  name: { type: 'String', required: false, active: true },
  file_used: { type: 'Array', required: false, active: true },
  file_dir: { type: 'Array', required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: false,
     active: true,
     ref: 'server' },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466125 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466125 } }
run { name: { type: 'String', required: false, active: true },
  status:
   { type: 'String',
     required: [ true, 'This field is required' ],
     active: true,
     enum:
      [ 'pending',
        'connecting',
        'initiated',
        'running',
        'completed',
        'terminated',
        'error' ],
     default: 'pending' },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: [ true, 'This field is required' ],
     active: true,
     ref: 'server' },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466136 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466136 } }
sample { biosamp_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'biosamp',
     required: true },
  name: { type: 'String', required: false, active: true },
  file_used: { type: 'Array', required: false, active: true },
  file_dir: { type: 'Array', required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: false,
     active: true,
     ref: 'server' },
  sample_summary_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: false,
     active: true,
     ref: 'sample_summary' },
  unique_id: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clinic_phen: { type: 'String', required: false, active: true },
  lesional:
   { type: 'String',
     required: false,
     active: true,
     enum: [ 'Lesional', 'Non-Lesional', 'Healthy' ] },
  patient_note: { type: 'String', required: false, active: true },
  collect_date: { type: 'Date', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466143 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466143 } }
sample_summary { sample_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'sample',
     required: true },
  run_id:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     required: [ true, 'This field is required' ],
     active: true,
     ref: 'run' },
  doc: { type: 'Mixed', required: false, active: true },
  perms: { type: 'Mixed' },
  owner:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  lastUpdatedUser:
   { type:
      { [Function: ObjectId]
        schemaName: 'ObjectId',
        defaultOptions: {},
        get: [Function],
        set: [Function: set],
        _checkRequired: [Function],
        _cast: [Function: castObjectId],
        cast: [Function: cast],
        checkRequired: [Function] },
     ref: 'User' },
  creationDate: { type: [Function: Date], default: 1603558466147 },
  lastUpdateDate: { type: [Function: Date], default: 1603558466147 } }
[0mGET /api/v1/users/logout [36m302[0m 46.161 ms - 200[0m
** isLoggedInView
[0mGET / [32m200[0m 8327.054 ms - -[0m
** isLoggedInView
/
https://localhost:4000/
[0mGET / [36m302[0m 4.010 ms - 460[0m
** isLoggedInView
[0mGET / [32m200[0m 46.568 ms - -[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 13.123 ms - 65[0m
**ssoReceiveToken
msg { access_token:
   'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2N2VkNmY5Yi00ZWY3LTQ3NmEtYTk0ZC02NTM0MmIwNjE0MWUiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2Mzk1NjUwMTAsImlhdCI6MTYwMzU2NTAxMH0.nrxAg2Dd7XW4rlQsIAQnaefVCJD93wigDolLMVNuWWsaiiHM1TG-VrfgmvLtmBnSt0WggbiyllV341ve8DSacFa6anLypLXEggvbgOI8_5_QZJZPcZ9-0DCDiNqRdsOFtoKJWpweTkfYmuHY1-X2yc2k_8i9x48sAtClKCSPlHAOWDfaXo-eDX-rTH6zkg8iY0PoCFICswuDXG2HmmrF6IEk7l094r7FOS0evePymMZcoishuj3VaBluCflB9EG39LxYqmcIPL7XjNNu_mqTMb3ehsauce1Sg3GhzQdE96RlBFQqUQM9eC-mETPqPzSWvwseRZbM5b6vub9HSrhV4w',
  refresh_token:
   'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyYzJlMTZhNy1iMTI0LTQ1MjYtYWNkYS1kZTMzMWYzZmIzMGQiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2NTYxMjUwMTAsImlhdCI6MTYwMzU2NTAxMH0.lnVTJaMJHrkgUGGGNuw196kpqx5BYeTe-TAO07ikK0rLipCmZx52jwDmkD7olYZRqd3O-oRLsdwWiP-sJnD4G_dwvIayag1jUouZiZsU5Bz6ODFP9p4kuIAAa753zvJPBS9tDaW4mWSsJWXTzSxzvjt9SpL7fo9ShM6chEWjvvi-dNLgljEVIpgGJmT3iJvoZCYG5CGrEdNHNGaBwAyqEja8hTWvd7TokD_EHrBC3Z_EORaDotR_8FEwq4Y-ObMHtc0DpBITL5Df0R73o823eDWfJQKiYJAH5JKp_q6RhVPITZ27Erv6OhDxCArPk1ojKNfvw5nUc900vmzHEiuHBg',
  expires_in: '36000000',
  token_type: 'Bearer' }
statusCode 200
currentUser { _id: '5f2a575a5f76dc305bc960e5',
  name: 'Onur Yukselen',
  email: 'onuryukselen@gmail.com',
  username: 'onur',
  scope: '*' }
updatedUser { photo: 'default.jpg',
  role: 'admin',
  _id: 5f39add38db6c9a200168a22,
  email: 'onuryukselen@gmail.com',
  __v: 0,
  name: 'Onur Yukselen',
  scope: '*',
  sso_id: '5f2a575a5f76dc305bc960e5',
  username: 'onur' }
**** AccessToken saved: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2N2VkNmY5Yi00ZWY3LTQ3NmEtYTk0ZC02NTM0MmIwNjE0MWUiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2Mzk1NjUwMTAsImlhdCI6MTYwMzU2NTAxMH0.nrxAg2Dd7XW4rlQsIAQnaefVCJD93wigDolLMVNuWWsaiiHM1TG-VrfgmvLtmBnSt0WggbiyllV341ve8DSacFa6anLypLXEggvbgOI8_5_QZJZPcZ9-0DCDiNqRdsOFtoKJWpweTkfYmuHY1-X2yc2k_8i9x48sAtClKCSPlHAOWDfaXo-eDX-rTH6zkg8iY0PoCFICswuDXG2HmmrF6IEk7l094r7FOS0evePymMZcoishuj3VaBluCflB9EG39LxYqmcIPL7XjNNu_mqTMb3ehsauce1Sg3GhzQdE96RlBFQqUQM9eC-mETPqPzSWvwseRZbM5b6vub9HSrhV4w
[0mGET /receivetoken?code=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJhYTI1MjI5Mi05MWRhLTQ3ZWQtODIxNi02ZjUxZWVlOGY2M2EiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2MDM1NjUzMTAsImlhdCI6MTYwMzU2NTAxMH0.CeSMdBvQNckiI8J6yL2-IZ4_SicZTEyqg9EzOi0dxNx6ixBx0c8_gP39bE_93vtOxYTnhYzUPPPQYAR5zE5DCjVNDUJaivu6yY0EHKD-mr3YxoNgqC0ggndJ3wbb4iNwPwcW4wbOV8aN37URHALfcIF9438ZJz_I1_Od7odwHkeMfF1B8FgVvdBz9XzsyhqsRaKMoX0d028s4CXhMq8a8ElycKBWZq-TDVykIAZ3lFn_N1sD4FnBh8plhv0Ct0ciJg2WAd2auQmMYoKICzGc7aCmAFg1HtoE3iB9Jr0f-5jS5hzndzpfW4lhlxekfDOIucU1ezUXqptn79z6mRJMMw [36m302[0m 179.055 ms - 64[0m
** isLoggedInView
[0mGET /after-sso [32m200[0m 52.076 ms - -[0m
** isLoggedInView
[0mGET / [32m200[0m 51.713 ms - -[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 27.411 ms - 14322[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 18.047 ms - 14322[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 21.332 ms - 14322[0m
** isLoggedInView
/
https://localhost:4000/
[0mGET / [36m302[0m 2.447 ms - 460[0m
** isLoggedInView
[0mGET / [32m200[0m 57.213 ms - -[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 8.320 ms - 64[0m
** isLoggedInView
/
https://localhost:4000/
[0mGET / [36m302[0m 1.185 ms - 460[0m
** isLoggedInView
[0mGET / [32m200[0m 73.060 ms - -[0m
**ssoReceiveToken
msg { access_token:
   'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3ZDA3YjAxNS1hNzgyLTRiODItOTliMC04YzUzNThhZjE2YWEiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2Mzk1ODI4NjUsImlhdCI6MTYwMzU4Mjg2NX0.oLbkquu7LwRmn8jdQ7wwZPUG5uesYD0wn_DlojHIUigOiu_rij2jfRJ9CYIWRJ5FnWW4EhKYFZnt_aFmlaHs-N6W2fH4ZpmPa_Vj9zzhcWYv6ou2Gzz4OUIqcDoHJGJr-plUiAhs9nS23bmjy2VlbZFS7sExVY_6jXbQ-4-UdsTG2rp36MEZ2HEqioxLPX6fDiSM7dkRJfmSPx30-Q2-NJaosVIZ8KM-EtMdK9vXaWYE45PSSUI9mrLuKXpGQn_J_S4MKoKbbMCD9a1tjIgJd81Ap_HH49IGqW97bRbtKAOXuHJmjR7G8EhByq_Chcf9s7CpBkea5SjGd3eS40JYSQ',
  refresh_token:
   'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYTc1ZDJjNC0xMWIyLTQwOTQtYTNjMy0zMWRmNDE5YWIyYzIiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2NTYxNDI4NjUsImlhdCI6MTYwMzU4Mjg2NX0.PosoG59e7JbfW6W2UGeX_8XKfnjBswBNBmD5ylsHTuWw20gCeDrMF8iBwfD2cdeetakEPlQMB_8O5rRqDcr-NG-ibOS6KjmhxCCkh_prg0O7yqUuA4VUP8RHWH8nmxy34LxwNr4r_qzHYh5rpLikoTXLglPlh1UP91RuUWxppPKOAs2pxz4HH6VkBXBcriFw3gzryH9oKfJ8OxBHE5nhAnb3RvwUIPFuOSa-6WGid2itGUAWGP3Rc35GqwQbVptq0p0kxyZuHc3zbgdcCh162rCYMUiVxZac-r8hHFDGgu-GzhuJG5118iKDBKZTPLaLtgBAOk-Xzil4ukky6hE0UQ',
  expires_in: '36000000',
  token_type: 'Bearer' }
statusCode 200
currentUser { _id: '5f2a575a5f76dc305bc960e5',
  name: 'Onur Yukselen',
  email: 'onuryukselen@gmail.com',
  username: 'onur',
  scope: '*' }
updatedUser { photo: 'default.jpg',
  role: 'admin',
  _id: 5f39add38db6c9a200168a22,
  email: 'onuryukselen@gmail.com',
  __v: 0,
  name: 'Onur Yukselen',
  scope: '*',
  sso_id: '5f2a575a5f76dc305bc960e5',
  username: 'onur' }
**** AccessToken saved: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3ZDA3YjAxNS1hNzgyLTRiODItOTliMC04YzUzNThhZjE2YWEiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2Mzk1ODI4NjUsImlhdCI6MTYwMzU4Mjg2NX0.oLbkquu7LwRmn8jdQ7wwZPUG5uesYD0wn_DlojHIUigOiu_rij2jfRJ9CYIWRJ5FnWW4EhKYFZnt_aFmlaHs-N6W2fH4ZpmPa_Vj9zzhcWYv6ou2Gzz4OUIqcDoHJGJr-plUiAhs9nS23bmjy2VlbZFS7sExVY_6jXbQ-4-UdsTG2rp36MEZ2HEqioxLPX6fDiSM7dkRJfmSPx30-Q2-NJaosVIZ8KM-EtMdK9vXaWYE45PSSUI9mrLuKXpGQn_J_S4MKoKbbMCD9a1tjIgJd81Ap_HH49IGqW97bRbtKAOXuHJmjR7G8EhByq_Chcf9s7CpBkea5SjGd3eS40JYSQ
[0mGET /receivetoken?code=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5Y2NlNmUxNC1kZWVmLTRjYWItODc0OS1iMTdiYmE1NmI4ZjQiLCJzdWIiOiI1ZjJhNTc1YTVmNzZkYzMwNWJjOTYwZTUiLCJleHAiOjE2MDM1ODMxNjUsImlhdCI6MTYwMzU4Mjg2NX0.H3mULku0jE6W41dSmBPJdLV_jU7-olr3MXFO1iLlTx8aBF-Huv1ly_-Hml49gxOloppfc5vv3ZntzOhTbLQMkY3KQkaljePRht8HD-N0mb8JhDoJxail_eM0cSNcCj2M-fT4qcd9MR_wgBvIEwkNK6DB002Abp4zchZHKpCwHHa625wuRU8oabvoZdQ7Afv6t14-lwB4XGpraEej8q1UngI-sqlFj3rC60y4u86L23clRuupasVloC9toir1IVzzIlxufNhgE7T9XWpllM8aeZcEQn6exNuLbP5bVKDJ9qZEAp5bHmmBndJm8Dlq19GWka6VzQUWWQA53Qpn9TFvgA [36m302[0m 189.336 ms - 64[0m
** isLoggedInView
[0mGET /after-sso [32m200[0m 58.211 ms - -[0m
** isLoggedInView
[0mGET / [32m200[0m 53.760 ms - -[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 63.507 ms - 14322[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 35.650 ms - 14322[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 57.902 ms - 64[0m
** isLoggedIn
[0mGET /api/v1/data/sample/detailed [32m200[0m 20.111 ms - 64[0m
** isLoggedInView
[0mGET / [32m200[0m 51.950 ms - -[0m
