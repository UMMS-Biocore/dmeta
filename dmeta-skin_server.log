HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379650 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379650 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379659 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379659 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379665 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379665 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379668 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379668 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379678 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379678 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379684 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379684 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379690 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379690 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847379695 },
  lastUpdateDate: { type: [Function: Date], default: 1606847379695 }
}
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382252 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382252 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382261 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382261 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382267 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382267 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382270 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382270 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382278 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382278 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382284 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382284 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382290 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382290 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847382297 },
  lastUpdateDate: { type: [Function: Date], default: 1606847382297 }
}
** isLoggedInView
[0mGET / [36m302[0m 7.595 ms - 464[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417037 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417037 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417046 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417046 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417054 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417054 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417057 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417057 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417065 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417065 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417070 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417070 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417077 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417077 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847417082 },
  lastUpdateDate: { type: [Function: Date], default: 1606847417082 }
}
** isLoggedInView
[0mGET / [32m200[0m 327.741 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 5.213 ms - 293[0m
[0mGET /api/v1/collections [33m404[0m 3.760 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 4.721 ms - 293[0m
[0mGET /api/v1/misc/changelog [32m200[0m 0.984 ms - -[0m
** isLoggedInView
[0mGET / [32m200[0m 70.113 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 3.879 ms - 293[0m
[0mGET /api/v1/collections [33m404[0m 5.397 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 5.973 ms - 293[0m
[0mGET /api/v1/misc/changelog [32m200[0m 0.801 ms - -[0m
** isLoggedInView
[0mGET /login [32m200[0m 31.469 ms - -[0m
[0mPOST /api/v1/users/login [31m500[0m 15.593 ms - 796[0m
[0mPOST /api/v1/users/login [31m500[0m 2.534 ms - 796[0m
[0mPOST /api/v1/users/login [31m500[0m 2.856 ms - 796[0m
[0mPOST /api/v1/users/login [31m500[0m 2.554 ms - 796[0m
** isLoggedInView
[0mGET /login [32m200[0m 30.266 ms - -[0m
** isLoggedInView
[0mGET /login [32m200[0m 26.455 ms - -[0m
** isLoggedInView
[0mGET / [32m200[0m 34.298 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 2.771 ms - 293[0m
[0mGET /api/v1/collections [33m404[0m 3.589 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 4.159 ms - 293[0m
[0mGET /api/v1/misc/changelog [32m200[0m 0.720 ms - -[0m
** isLoggedInView
[0mGET / [32m200[0m 35.807 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 3.028 ms - 293[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [33m404[0m 3.377 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 2.542 ms - 293[0m
[0mGET /api/v1/misc/changelog [32m200[0m 0.640 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553308 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553308 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553319 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553319 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553325 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553325 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553329 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553329 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553336 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553336 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553341 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553341 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553348 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553348 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606847553353 },
  lastUpdateDate: { type: [Function: Date], default: 1606847553353 }
}
** isLoggedInView
[0mGET / [32m200[0m 221.677 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 7.042 ms - 293[0m
[0mGET /api/v1/collections [33m404[0m 4.974 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 4.262 ms - 293[0m
[0mGET /api/v1/misc/changelog [32m200[0m 0.943 ms - -[0m
** isLoggedInView
[0mGET / [36m304[0m 49.204 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 4.251 ms - 293[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [33m404[0m 5.006 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 3.711 ms - 293[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.710 ms - -[0m
** isLoggedInView
[0mGET / [36m304[0m 48.014 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [33m404[0m 3.123 ms - 293[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [33m404[0m 3.384 ms - 293[0m
[0mGET /api/v1/fields [33m404[0m 2.332 ms - 293[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.544 ms - -[0m
** isLoggedInView
[0mGET /login [32m200[0m 26.151 ms - -[0m
[0mPOST /api/v1/users/login [33m401[0m 8.759 ms - 311[0m
[0mPOST /api/v1/users/login [33m401[0m 2.030 ms - 311[0m
[0mPOST /api/v1/users/login [32m200[0m 253.617 ms - 408[0m
** isLoggedInView
[0mGET / [32m200[0m 51.633 ms - -[0m
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
** isLoggedIn
[0mGET /api/v1/projects [32m200[0m 7.363 ms - 467[0m
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [32m200[0m 10.917 ms - -[0m
[0mGET /api/v1/fields [32m200[0m 33.187 ms - -[0m
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
** isLoggedIn
** isLoggedIn
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/exp_series [32m200[0m 19.962 ms - 435[0m
[0mGET /api/v1/projects/vitiligo/data/exp [32m200[0m 20.134 ms - 466[0m
** isLoggedIn
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/biosamp [32m200[0m 24.066 ms - 801[0m
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/sample [32m200[0m 15.824 ms - 703[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/misc/changelog [36m304[0m 3.336 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/run [32m200[0m 22.489 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/sample_summary [32m200[0m 31.184 ms - 904[0m
[0mGET /api/v1/projects/vitiligo/data/file [32m200[0m 19.459 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/analysis [32m200[0m 22.455 ms - 904[0m
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
Error: Route.get() requires a callback function but got a [object Undefined]
    at Route.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/route.js:202:15)
    at Function.proto.<computed> [as get] (/Users/alper/workdir/dmeta/node_modules/express/lib/router/index.js:510:19)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/routes/viewRoutes.js:14:8)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
    at Module.Hook._require.Module.require (/usr/local/lib/node_modules/pm2/node_modules/require-in-the-middle/index.js:80:39)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (/Users/alper/workdir/dmeta/app.js:26:20)
    at Module._compile (internal/modules/cjs/loader.js:1138:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1158:10)
    at Module.load (internal/modules/cjs/loader.js:986:32)
    at Function.Module._load (internal/modules/cjs/loader.js:879:14)
    at Module.require (internal/modules/cjs/loader.js:1026:19)
UNCAUGHT EXCEPTION! Shutting down...
Error Route.get() requires a callback function but got a [object Undefined]
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487649 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487649 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487657 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487657 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487663 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487663 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487665 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487665 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487672 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487672 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487677 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487677 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487682 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487682 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851487687 },
  lastUpdateDate: { type: [Function: Date], default: 1606851487687 }
}
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560801 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560801 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560811 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560811 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560819 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560819 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560822 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560822 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560831 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560831 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560838 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560838 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560845 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560845 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851560851 },
  lastUpdateDate: { type: [Function: Date], default: 1606851560851 }
}
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570263 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570263 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570275 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570275 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570283 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570283 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570286 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570286 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570295 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570295 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570301 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570301 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570308 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570308 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851570314 },
  lastUpdateDate: { type: [Function: Date], default: 1606851570314 }
}
** isLoggedInView
[0mGET / [32m200[0m 314.526 ms - -[0m
** isLoggedIn
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [36m304[0m 13.049 ms - -[0m
[0mGET /api/v1/collections [36m304[0m 17.818 ms - -[0m
[0mGET /api/v1/fields [36m304[0m 43.632 ms - -[0m
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/exp_series [36m304[0m 16.941 ms - -[0m
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects/vitiligo/data/exp [36m304[0m 20.976 ms - -[0m
queryStr {}
{}
queryStr {}
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/biosamp [36m304[0m 31.133 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/run [36m304[0m 30.167 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects/vitiligo/data/sample_summary [36m304[0m 24.236 ms - -[0m
queryStr {}
{}
queryStr {}
[0mGET /api/v1/misc/changelog [36m304[0m 4.619 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/file [36m304[0m 33.911 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/sample [36m304[0m 38.736 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/analysis [36m304[0m 33.090 ms - -[0m
** isLoggedInView
[0mGET /import [32m200[0m 44.539 ms - -[0m
** isLoggedInView
[0mGET /admin-overview [32m200[0m 74.962 ms - -[0m
** isLoggedIn
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [36m304[0m 14.295 ms - -[0m
[0mGET /api/v1/fields [36m304[0m 41.502 ms - -[0m
[0mGET /api/v1/projects [36m304[0m 40.892 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.741 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 36.252 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639479 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639479 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639489 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639489 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639497 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639497 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639501 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639501 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639510 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639510 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639516 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639516 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639523 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639523 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606851639529 },
  lastUpdateDate: { type: [Function: Date], default: 1606851639529 }
}
** isLoggedInView
[0mGET /admin-overview [36m304[0m 303.162 ms - -[0m
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
** isLoggedIn
[0mGET /api/v1/collections [36m304[0m 12.481 ms - -[0m
[0mGET /api/v1/fields [36m304[0m 34.467 ms - -[0m
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects [36m304[0m 32.342 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.746 ms - -[0m
** isLoggedInView
[0mGET /import [32m200[0m 53.485 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.953 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 72.920 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.119 ms - -[0m
** isLoggedInView
[0mGET /admin-overview [36m304[0m 54.873 ms - -[0m
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [36m304[0m 10.682 ms - -[0m
[0mGET /api/v1/fields [36m304[0m 42.923 ms - -[0m
[0mGET /api/v1/projects [36m304[0m 39.325 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.462 ms - -[0m
** isLoggedInView
[0mGET / [36m304[0m 43.536 ms - -[0m
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
** isLoggedIn
[0mGET /api/v1/projects [36m304[0m 8.248 ms - -[0m
[0mGET /api/v1/fields [36m304[0m 33.111 ms - -[0m
queryStr {}
{}
queryStr {}
[0mGET /api/v1/collections [36m304[0m 34.600 ms - -[0m
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/misc/changelog [36m304[0m 2.146 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
** isLoggedIn
** isLoggedIn
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/exp_series [36m304[0m 19.995 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/biosamp [36m304[0m 19.267 ms - -[0m
queryStr {}
{}
queryStr {}
** isLoggedIn
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects/vitiligo/data/exp [36m304[0m 22.665 ms - -[0m
** isLoggedIn
queryStr {}
{}
queryStr {}
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/run [36m304[0m 25.054 ms - -[0m
** isLoggedIn
[0mGET /api/v1/projects/vitiligo/data/sample [36m304[0m 25.109 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/file [36m304[0m 26.517 ms - -[0m
queryStr {}
{}
queryStr {}
queryStr {}
{}
queryStr {}
[0mGET /api/v1/projects/vitiligo/data/analysis [36m304[0m 22.428 ms - -[0m
[0mGET /api/v1/projects/vitiligo/data/sample_summary [36m304[0m 17.845 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 40.110 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.631 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 41.456 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.538 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242625 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242625 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242636 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242636 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242642 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242642 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242645 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242645 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242653 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242653 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242659 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242659 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242665 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242665 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852242671 },
  lastUpdateDate: { type: [Function: Date], default: 1606852242671 }
}
** isLoggedInView
[0mGET /import [36m304[0m 315.684 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.796 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329898 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329898 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329908 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329908 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329915 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329915 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329918 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329918 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329927 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329927 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329933 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329933 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329939 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329939 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852329944 },
  lastUpdateDate: { type: [Function: Date], default: 1606852329944 }
}
** isLoggedInView
[0mGET /import [36m304[0m 306.350 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.318 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367416 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367416 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367425 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367425 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367432 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367432 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367435 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367435 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367443 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367443 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367449 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367449 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367456 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367456 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852367463 },
  lastUpdateDate: { type: [Function: Date], default: 1606852367463 }
}
** isLoggedInView
[0mGET /import [36m304[0m 204.813 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.416 ms - -[0m
HTTPS server running on port 3000...
DB Connections Successful
vitiligo_exp_series {
  name: { type: 'String', required: false, active: true },
  design: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420225 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420225 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_exp {
  exp_series_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp_series',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  summary: { type: 'String', required: false, active: true },
  protocol_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'protocol'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420234 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420234 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_biosamp {
  exp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_exp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  organism: { type: 'String', required: false, active: true },
  patient: { type: 'String', required: false, active: true },
  aliquot: { type: 'String', required: false, active: true },
  patient_note: { type: 'String', required: false, active: true },
  blister_loc: { type: 'String', required: false, active: true },
  blister_num: { type: 'String', required: false, active: true },
  volume_bf: { type: 'String', required: false, active: true },
  total_cells: { type: 'String', required: false, active: true },
  perc_live_cells: { type: 'String', required: false, active: true },
  blister_comments: { type: 'String', required: false, active: true },
  bead_batch: { type: 'String', required: false, active: true },
  bead_occup: { type: 'String', required: false, active: true },
  col_date: { type: 'String', required: false, active: true },
  visit_num: { type: 'String', required: false, active: true },
  clin_pheno: { type: 'String', required: false, active: true },
  type: { type: 'String', required: false, active: true },
  skin: {
    type: 'String',
    required: false,
    active: true,
    enum: [ 'Lesional', 'Non-Lesional', 'Control', 'Healthy' ]
  },
  gender: { type: 'String', required: false, active: true },
  ethnicity: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420241 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420241 }
}
vitiligo_run {
  name: { type: 'String', required: false, active: true },
  status: {
    type: 'String',
    required: [ true, 'This field is required' ],
    active: true,
    enum: [
      'pending',
      'connecting',
      'initiated',
      'running',
      'completed',
      'terminated',
      'error'
    ],
    default: 'pending'
  },
  pipe_id: { type: 'Number', required: false, active: true },
  run_id: { type: 'Number', required: false, active: true },
  tmplt_id: { type: 'Number', required: false, active: true },
  in: { type: 'Mixed', required: false, active: true },
  out: { type: 'Mixed', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'server'
  },
  run_env: { type: 'String', required: false, active: true },
  work_dir: { type: 'String', required: false, active: true },
  run_url: { type: 'String', required: false, active: true },
  file_ids: { type: [], required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420244 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420244 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample {
  biosamp_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_biosamp',
    required: true
  },
  name: { type: 'String', required: false, active: true },
  unique_id: { type: 'String', required: false, active: true },
  contract: { type: 'String', required: false, active: true },
  cell_density_tc: { type: 'String', required: false, active: true },
  cell_density_indrop: { type: 'String', required: false, active: true },
  run_comments: { type: 'String', required: false, active: true },
  sc_lib_status: { type: 'String', required: false, active: true },
  sequence_date: { type: 'String', required: false, active: true },
  seq_details: { type: 'String', required: false, active: true },
  total_valid_reads: { type: 'String', required: false, active: true },
  cells_umis_gt_500: { type: 'String', required: false, active: true },
  mean_umi: { type: 'String', required: false, active: true },
  mean_cell: { type: 'String', required: false, active: true },
  duplication_rate: { type: 'String', required: false, active: true },
  seq_comments: { type: 'String', required: false, active: true },
  library_tube_id: { type: 'String', required: false, active: true },
  index_id: { type: 'String', required: false, active: true },
  index_seq: { type: 'String', required: false, active: true },
  pool_id: { type: 'String', required: false, active: true },
  comment: { type: 'String', required: false, active: true },
  status: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420253 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420253 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_sample_summary {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420260 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420260 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_file {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  file_used: { type: [], required: false, active: true },
  file_dir: { type: [], required: false, active: true },
  file_type: { type: 'String', required: false, active: true },
  collection_type: { type: 'String', required: false, active: true },
  file_env: { type: 'String', required: false, active: true },
  server_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'server'
  },
  archive_dir: { type: 'String', required: false, active: true },
  s3_archive_dir: { type: [], required: false, active: true },
  gs_archive_dir: { type: [], required: false, active: true },
  name: { type: 'String', required: false, active: true },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420267 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420267 }
}
5fb2b395c8c1e577fcb8ce6c
{
  _id: 5fb2b395c8c1e577fcb8ce6c,
  active: true,
  creationDate: 2020-11-17T19:36:49.048Z,
  lastUpdateDate: 2020-11-17T19:36:49.048Z,
  restrictTo: { role: [ 'admin' ] },
  name: 'vitiligo',
  label: 'Vitiligo',
  lastUpdatedUser: 5f39add38db6c9a200168a22,
  owner: 5f39add38db6c9a200168a22,
  slug: 'vitiligo',
  __v: 0,
  perms: { read: { group: [Array] } }
}
vitiligo_analysis {
  sample_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'vitiligo_sample',
    required: true
  },
  run_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: [ true, 'This field is required' ],
    active: true,
    ref: 'vitiligo_run'
  },
  doc: { type: 'Mixed', required: false, active: true },
  file_id: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    required: false,
    active: true,
    ref: 'vitiligo_file'
  },
  perms: { type: 'Mixed' },
  owner: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  lastUpdatedUser: {
    type: [Function: ObjectId] {
      schemaName: 'ObjectId',
      defaultOptions: {},
      get: [Function],
      set: [Function: set],
      _checkRequired: [Function],
      _cast: [Function: castObjectId],
      cast: [Function: cast],
      checkRequired: [Function]
    },
    ref: 'User'
  },
  creationDate: { type: [Function: Date], default: 1606852420273 },
  lastUpdateDate: { type: [Function: Date], default: 1606852420273 }
}
** isLoggedInView
[0mGET /import [36m304[0m 290.352 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.647 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 73.143 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 1.069 ms - -[0m
** isLoggedInView
[0mGET /import [36m304[0m 51.308 ms - -[0m
[0mGET /api/v1/misc/changelog [36m304[0m 0.586 ms - -[0m
